@using ContactPro.Services.Interfaces;
@model ContactPro.Models.EmailContactViewModel
@inject IImageService _ImageService


<style>
    .ck-editor__editable_inline {
        min-height: 300px;
    }
</style>
<div class="row">
    <div class="emphasisTitle text-center p-3">Email Contact: @Model.Contact?.FullName </div>
</div>

<div class="p-3 floatingContainer">
    <form asp-action="EmailContact" asp-controller="Contacts" method="post">
        <input type="hidden" asp-for="EmailData!.GroupName" /> @*Reference the Group Name*@
        <div class="row row-cols-1 row-cols-md-2 g-3 mb-3">
            <div class="col col-md-12">
                <label asp-for="EmailData!.EmailAddress" class="form-label">To:</label> @* Reference the EmailData's email address*@
                <textarea type="email" readonly class="form-control" asp-for="EmailData!.EmailAddress" rows="3"></textarea> @* Reference the EmailData's email address*@
            </div>
        </div>
        <div class="row row-cols-1 g-3">
            <div class="col">
                <label asp-for="EmailData!.EmailSubject" class="form-label">Subject:</label> @* Reference the EmailData's email subject*@
                <input type="text" class="form-control" asp-for="EmailData!.EmailSubject" /> @* Reference the EmailData's email subject*@
            </div>
            <div class="col">
                <label asp-for="EmailData!.EmailBody" class="form-label">Message:</label> @* Reference the EmailData's email body*@
                <textarea class="form-control editor" rows=10 asp-for="EmailData!.EmailBody" required></textarea> @* Reference the EmailData's email body*@
            </div>
            <div class="col text-end">
                <a asp-action="Index" class="btn btn-outline-secondary rounded-pill btnLink start-0">Cancel</a>
                <button class="btn btn-primary rounded-pill btnlinks" type="submit">Send</button>
            </div>
        </div>
    </form>
</div>
@section scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <!--CK Editor-->
    <script src="https://cdn.ckeditor.com/ckeditor5/37.1.0/classic/ckeditor.js"></script>
    <script>
        ClassicEditor
            .create(document.querySelector('.editor'), {
                licenseKey: '',
            })
            .then(editor => {
                window.editor = editor;
            });
    </script>

    <!--Sweet Alerts-->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let message = '@(ViewBag.SwalMessage)';
        if (!message.includes("Error") && message != '') {
            Swal.fire({
                backdrop: false,
                icon: 'success',
                title: message,
                showConfirmButton: true
            });
        } else if (message.includes("Error")) {
            Swal.fire({
                backdrop: false,
                icon: 'error',
                title: 'Oops...',
                text: message
            });
        }
    </script>
}